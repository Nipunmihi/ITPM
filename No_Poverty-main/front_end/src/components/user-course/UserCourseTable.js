import React, { useState } from "react";
import { Card, Button, Input, message } from "antd";
import { EyeOutlined, PrinterOutlined, BookOutlined } from "@ant-design/icons";
import CourseViewModal from "./CourseViewModal";
import courseService from "../../services/courseService";
import html2pdf from "html2pdf.js";

const UserCourseTable = ({ courses }) => {
  const [selectedCourse, setSelectedCourse] = useState(null);
  const [loading, setLoading] = useState(false);
  const [searchQuery, setSearchQuery] = useState("");

  // Function to handle course enrollment
  const handleEnroll = async (courseId, enrollmentKey) => {
    setLoading(true);
    try {
      const user = JSON.parse(localStorage.getItem("userInfo"));
      const userId = user?.user?._id;

      if (userId) {
        await courseService.enrollUser({
          courseId,
          userId,
          enrollementKey: enrollmentKey,
        });
        message.success("Enrolled successfully!");
      }
    } catch (error) {
      console.error(error);
      message.error("Failed to enroll. Please try again!");
    } finally {
      setLoading(false);
    }
  };

  // Function to check if the user is already enrolled in a course
  const checkForEnrollement = (course) => {
    const user = JSON.parse(localStorage.getItem("userInfo"));
    if (user) {
      const userId = user.user._id;
      return course.enrolledUsers.includes(userId);
    }
    return false;
  };

  // Function to generate and download a styled PDF for a course
  const handlePrintCourse = (course) => {
    const content = `
      <div style="font-family: Arial, sans-serif; padding: 20px; max-width: 800px; margin: auto; background: #f9f9f9; border-radius: 10px;">
        <div style="background: #1565c0; color: #ffffff; padding: 15px; text-align: center; border-radius: 10px 10px 0 0;">
          <h1 style="margin: 0; font-size: 24px;">${course.name}</h1>
        </div>

        <div style="padding: 20px; background: #ffffff; border-radius: 0 0 10px 10px;">
          <p style="font-size: 16px; color: #333; line-height: 1.6;">
            <strong>Description:</strong> ${course.description}
          </p>
          
          <div style="margin-top: 20px; padding: 15px; border-left: 5px solid #1565c0; background: #f1f8ff;">
            <h3 style="color: #1565c0; font-size: 18px; margin-bottom: 10px;">Course Content</h3>
            <p style="font-size: 14px; color: #555; line-height: 1.5;">${course.courseContent}</p>
          </div>
        </div>

        <footer style="text-align: center; font-size: 12px; color: #777; margin-top: 20px;">
          <p>Generated by Community Uplift | &copy; 2025</p>
        </footer>
      </div>
    `;

    const element = document.createElement("div");
    element.innerHTML = content;

    html2pdf()
      .set({
        margin: 10,
        filename: `${course.name}_details.pdf`,
        image: { type: "jpeg", quality: 0.98 },
        html2canvas: { scale: 2 },
        jsPDF: { unit: "mm", format: "a4", orientation: "portrait" },
      })
      .from(element)
      .save();
  };

  // Filter courses based on search input
  const filteredCourses = courses.filter((course) =>
    course.name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  return (
    <div
      style={{
        padding: "20px",
        backgroundColor: "#e3f2fd",
        minHeight: "100vh",
        maxWidth: "1200px",
        margin: "0 auto",
        borderRadius: "10px",
      }}
    >
      <h2
        style={{
          textAlign: "center",
          fontSize: "28px",
          fontWeight: "bold",
          color: "#1565c0",
          marginBottom: "16px",
        }}
      >
        Explore Our Courses
      </h2>

      {/* Search Bar */}
      <div style={{ display: "flex", justifyContent: "center", marginBottom: "20px" }}>
        <Input
          placeholder="Search for a course..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          style={{
            width: "60%",
            borderRadius: "30px",
            padding: "10px 20px",
            fontSize: "16px",
            boxShadow: "0px 4px 10px rgba(0, 0, 0, 0.1)",
            backgroundColor: "#ffffff",
            border: "1px solid #1565c0",
          }}
        />
      </div>

      {/* Course Cards */}
      <div style={{ display: "flex", flexWrap: "wrap", gap: "20px", justifyContent: "center", padding: "10px" }}>
        {filteredCourses.map((course) => (
          <Card
            key={course._id}
            style={{
              width: "300px",
              borderRadius: "15px",
              boxShadow: "0px 8px 15px rgba(0, 0, 0, 0.1)",
              background: "#ffffff",
              border: "1px solid #90caf9",
              textAlign: "center",
              transition: "transform 0.3s ease, box-shadow 0.3s ease",
            }}
            hoverable
            onMouseEnter={(e) => (e.currentTarget.style.transform = "scale(1.05)")}
            onMouseLeave={(e) => (e.currentTarget.style.transform = "scale(1)")}
          >
            <BookOutlined style={{ fontSize: "40px", color: "#1565c0", marginBottom: "10px" }} />
            <h3 style={{ fontSize: "18px", fontWeight: "bold", color: "#1565c0" }}>{course.name}</h3>

            <p style={{ fontSize: "14px", color: "#333" }}>
              {course.description.length > 100
                ? `${course.description.substring(0, 100)}...`
                : course.description}
              {course.description.length > 100 && (
                <span style={{ color: "#1565c0", cursor: "pointer" }} onClick={() => setSelectedCourse(course)}>
                  See More
                </span>
              )}
            </p>

            <div style={{ display: "flex", justifyContent: "space-between", marginTop: "10px", alignItems: "center" }}>
              <Button
                type="primary"
                shape="round"
                disabled={checkForEnrollement(course)}
                onClick={() => handleEnroll(course._id, course.enrollmentKey)}
                loading={loading}
                style={{ fontSize: "16px", flex: 1, marginRight: "5px", backgroundColor: "#1565c0", borderColor: "#1565c0", color: "#ffffff" }}
              >
                Enroll Now
              </Button>

              <PrinterOutlined onClick={() => handlePrintCourse(course)} style={{ fontSize: "20px", cursor: "pointer", color: "#1565c0", marginLeft: "10px" }} />
              <EyeOutlined onClick={() => setSelectedCourse(course)} style={{ fontSize: "20px", cursor: "pointer", color: "#1565c0", marginLeft: "10px" }} />
            </div>
          </Card>
        ))}
      </div>

      {selectedCourse && <CourseViewModal course={selectedCourse} onClose={() => setSelectedCourse(null)} />}
    </div>
  );
};

export default UserCourseTable;
